;-------------------------------------------------------------------------;
.include "graphics.inc"
.include "snes.inc"
.include "snes_decompress.inc"
.include "snes_joypad.inc"
;-------------------------------------------------------------------------;
.import oam_table, oam_hitable
.importzp frame_ready
;-------------------------------------------------------------------------;
.export DoParadox
;-------------------------------------------------------------------------;

LINE_COLOR1	= 7fffh
LINE_COLOR2	= 7c00h
STAR_COLOR	= 7bdch
SCROLL_BG_COLOR	= 0100h
SPRITE_COLOR	= 7fffh

;-------------------------------------------------------------------------;
BG1GFX = 02000h
BG1MAP = 00000h
BG2GFX = 08000h
BG2MAP = 0f200h
BG3GFX = 0e000h
BG3MAP = 00a00h
OAMGFX = 0c000h
;-------------------------------------------------------------------------;
CREDIT_XPOS	= 200
FONT_ROWS	= 9
FONT_LEN	= 16*FONT_ROWS*8
MAX_SCROLL_SPR	= 32
SPRITE_WIDTH	= 8

RAM_SPR_SCROLL	= 0d00h
RAM_SPR_SCROLL2	= 0e00h
RAM_CREDIT_SINE	= 0f00h
RAM_CGADD	= 1000h
RAM_CGDATA	= 1200h
RAM_BG3HOFS	= 1500h
RAM_TM		= 1850h
RAM_BG2VOFS	= 1b00h
;-------------------------------------------------------------------------;


;/////////////////////////////////////////////////////////////////////////;
.zeropage
;/////////////////////////////////////////////////////////////////////////;


;-------------------------------------------------------------------------;
credit_speed:
	.res 1
;-------------------------------------------------------------------------;


;/////////////////////////////////////////////////////////////////////////;
.code
;/////////////////////////////////////////////////////////////////////////;


;-------------------------------------------------------------------------;
	.a8
	.i16
;-------------------------------------------------------------------------;


;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
DoParadox:
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
	rep	#10h
	sep	#20h

	stz	REG_MDMAEN
	stz	REG_HDMAEN

	ldx	#0000h
	txy
	phx
;-------------------------------------------------------------------------;
:	stz	RAM_SPR_SCROLL,x
	inx
	cpx	#1800h
	bne	:-
;-------------------------------------------------------------------------;
	lda	#1
	sta	RAM_SPR_SCROLL+016h
;-------------------------------------------------------------------------;
:	lda	SCROLL_SINE,y
	sta	RAM_SPR_SCROLL2,y
	iny
	cpy	#0040h
	bne	:-
;-------------------------------------------------------------------------;
	jsr	Setup

	DoDecompressDataVram gfx_8x8_bpl2Tiles, BG3GFX

	lda	#80h
	sta	REG_VMAIN

	ldx	#BG3GFX/2
	stx	REG_VMADDL
	plx

	rep	#30h

	lda	REG_VMDATALREAD
;-------------------------------------------------------------------------;
:	lda	REG_VMDATALREAD
	sta	7f0000h,x
	inx
	cpx	#FONT_LEN
	bne	:-
;-------------------------------------------------------------------------;
	sep	#20h

	stz	REG_VMAIN

	ldx	#OAMGFX/2
	jsr	BPL2toBPL4
	ldx	#BG1GFX/2
	jsr	BPL2toBPL4

	DoDecompressDataVram gfx_logoTiles, BG2GFX
	DoDecompressDataVram gfx_logoMap, BG2MAP-100h
	DoCopyPalette gfx_logoPal, 112, 16

	jsr	HDMA
	jsr	CopyCreditSine
	lda	#NMI_ON|NMI_JOYPAD
	sta	REG_NMITIMEN
	lda	#1
	sta	frame_ready
	jsr	ScreenOn
;=========================================================================;
Loop:
;=========================================================================;
	jsr	MoveBG3H
	jsr	ReadNMI
	jsr	BG3Scroll
	jsr	ManageOAM
	jsr	MoveBG1
	jsr	BG1PalEffect
	jsr	MoveBG2V
	jsr	MoveBG2H
	jsr	SpriteSine
	jsr	SpriteScroll
	jsr	CreditSine
;-------------------------------------------------------------------------;
	lda	joy1_down
	ora	joy2_down
	and	#10h
	bne	EndIntro
;-------------------------------------------------------------------------;
	lda	#0fh
	sta	REG_INIDISP
	bra	Loop
;-------------------------------------------------------------------------;
EndIntro:
;-------------------------------------------------------------------------;
	jmp	DoParadox

;=========================================================================;
ManageOAM:
;=========================================================================;
	lda	#^oam_table
	ldx	#oam_table&65535
	stx	REG_WMADDL
	sta	REG_WMADDH

	stz	oam_hitable
	lda	RAM_SPR_SCROLL+016h
	sta	RAM_SPR_SCROLL+01ah
	sec
	sbc	#SPRITE_WIDTH+1

	pha
	and	#80h
	asl
	rol	oam_hitable
	pla

	ldx	#0000h
	stx	REG_OAMADDL
;-------------------------------------------------------------------------;
:	sta	REG_WMDATA
	clc
	cld
	adc	#SPRITE_WIDTH
	pha
	clc
	cld
	lda	RAM_SPR_SCROLL2,x
	adc	#64h
	sta	RAM_SPR_SCROLL+014h
	clc
	lda	RAM_CGADD+0a8h
	adc	RAM_SPR_SCROLL+014h
	sta	REG_WMDATA
	lda	RAM_SPR_SCROLL+040h,x
	sta	REG_WMDATA
	stz	REG_WMDATA

	lda	RAM_SPR_SCROLL+01ah
	clc
	adc	#SPRITE_WIDTH
	sta	RAM_SPR_SCROLL+01ah

	pla
	inx
	cpx	#MAX_SCROLL_SPR+1
	bne	:-
;-------------------------------------------------------------------------;
	ldx	#(CREDIT_END-1)-CREDIT
	ldy	#CREDIT_XPOS
;-------------------------------------------------------------------------;
:	tya
	sta	REG_WMDATA
	lda	RAM_CREDIT_SINE,x
	clc
	adc	#42h
	sta	REG_WMDATA
	lda	CREDIT,x
	and	#3fh
	sta	REG_WMDATA
	stz	REG_WMDATA
	iny
	iny
	iny
	iny
	iny
	iny
	iny
	iny
	dex
	bne	:-
;-------------------------------------------------------------------------;
	rts

;=========================================================================;
CreditSine:
;=========================================================================;
	inc	credit_speed
	lda	credit_speed
	cmp	#02h
	bne	exit1
;-------------------------------------------------------------------------;
	stz	credit_speed
	lda	RAM_CREDIT_SINE
	sta	RAM_CREDIT_SINE+00eh
	ldx	#0000h
;-------------------------------------------------------------------------;
:	lda	RAM_CREDIT_SINE+001h,x
	sta	RAM_CREDIT_SINE,x
	inx
	cpx	#SPRITE_SINE_END-SPRITE_SINE
	bne	:-
;-------------------------------------------------------------------------;
	rts

;=========================================================================;
CopyCreditSine:
;=========================================================================;
	ldx	#0000h
;-------------------------------------------------------------------------;
:	lda	SPRITE_SINE,x
	sta	RAM_CREDIT_SINE,x
	inx
	cpx	#SPRITE_SINE_END-SPRITE_SINE
	bne	:-
;-------------------------------------------------------------------------;
exit1:	rts

;=========================================================================;
SpriteSine:
;=========================================================================;
	inc	RAM_SPR_SCROLL+012h
	lda	RAM_SPR_SCROLL+012h
	beq	exit1
;-------------------------------------------------------------------------;
	stz	RAM_SPR_SCROLL+012h
	lda	RAM_SPR_SCROLL2
	sta	RAM_SPR_SCROLL2+040h
	ldx	#0000h
;-------------------------------------------------------------------------;
:	lda	RAM_SPR_SCROLL2+001h,x
	sta	RAM_SPR_SCROLL2,x
	inx
	cpx	#0040h
	bne	:-
;-------------------------------------------------------------------------;
	rts

;=========================================================================;
SpriteScroll:
;=========================================================================;
	dec	RAM_SPR_SCROLL+016h
	lda	RAM_SPR_SCROLL+016h
	bne	exit1
;-------------------------------------------------------------------------;
	lda	#SPRITE_WIDTH
	sta	RAM_SPR_SCROLL+016h
;-------------------------------------------------------------------------;
	ldx	#0000h
:	lda	RAM_SPR_SCROLL+041h,x
	sta	RAM_SPR_SCROLL+040h,x
	inx
	cpx	#MAX_SCROLL_SPR
	bne	:-
;-------------------------------------------------------------------------;
	ldx	RAM_SPR_SCROLL+018h
;-------------------------------------------------------------------------;
:	lda	SPRITE_SCROLL_TEXT,x
	bne	:+
;-------------------------------------------------------------------------;
	ldx	#0000h
	bra	:-
;-------------------------------------------------------------------------;
:	and	#3fh
	sta	RAM_SPR_SCROLL+040h+MAX_SCROLL_SPR
	inx
	stx	RAM_SPR_SCROLL+018h
	rts

;=========================================================================;
MoveBG2V:
;=========================================================================;
	ldx	RAM_SPR_SCROLL+010h
	ldy	#0000h
;-------------------------------------------------------------------------;
copy_bg_sine:
;-------------------------------------------------------------------------;
	lda	BG2_SINE,x
	cmp	#0ffh
	bne	:+
;-------------------------------------------------------------------------;
	ldx	#0000h
	bra	copy_bg_sine
;-------------------------------------------------------------------------;
:	sta	RAM_BG2VOFS+00dh,y
	inx
	iny
	iny
	iny
	cpy	#00f0h
	bmi	copy_bg_sine
;-------------------------------------------------------------------------;
	ldx	RAM_SPR_SCROLL+010h
	inx
	lda	BG2_SINE,x
	cmp	#0ffh
	bne	:+
;-------------------------------------------------------------------------;
	ldx	#0000h
;-------------------------------------------------------------------------;
:	stx	RAM_SPR_SCROLL+010h
	rts

;=========================================================================;
MoveBG2H:
;=========================================================================;
	ldx	RAM_SPR_SCROLL
	lda	LIST_BG2HOFS,x
	cmp	#0ffh
	bne	:+
;-------------------------------------------------------------------------;
	ldx	#0000h
	lda	LIST_BG2HOFS,x
;-------------------------------------------------------------------------;
:	sta	REG_BG2HOFS
	inx
	stz	REG_BG2HOFS
	inx
	stx	RAM_SPR_SCROLL
	rts

;=========================================================================;
MoveBG1:
;=========================================================================;
	ldx	RAM_SPR_SCROLL+002h
	lda	LIST_BG1VOFS,x
	bne	:+
;-------------------------------------------------------------------------;
	ldx	#0000h
	lda	LIST_BG1VOFS,x
;-------------------------------------------------------------------------;
:	sta	RAM_CGADD+0a8h
	sta	RAM_CGDATA+0fch
	sta	RAM_TM+004h
	clc
	cld
	sta	RAM_SPR_SCROLL+006h
	sta	RAM_SPR_SCROLL+004h
	lda	#04h
	sta	RAM_SPR_SCROLL+005h
	sbc	RAM_SPR_SCROLL+004h
	sta	REG_BG1VOFS
	stz	REG_BG1VOFS
	clc
	cld
	lda	#20h
	sbc	RAM_SPR_SCROLL+006h
	sta	RAM_CGADD+116h
	sta	RAM_CGDATA+1a1h
	sta	RAM_TM+008h
	inx
	stx	RAM_SPR_SCROLL+002h
	rts

;=========================================================================;
BG1PalEffect:
;=========================================================================;
	lda	RAM_CGDATA+109h
	sta	RAM_CGDATA+196h
	lda	RAM_CGDATA+10ah
	sta	RAM_CGDATA+197h
	ldx	#0000h
;-------------------------------------------------------------------------;
:	lda	RAM_CGDATA+10ch,x
	sta	RAM_CGDATA+109h,x
	lda	RAM_CGDATA+10dh,x
	sta	RAM_CGDATA+10ah,x
	inx
	inx
	inx
	cpx	#008dh
	bmi	:-
;-------------------------------------------------------------------------;
	rts

;=========================================================================;
ReadNMI:
;=========================================================================;
	lda	REG_RDNMI
	and	#80h
	beq	ReadNMI
;-------------------------------------------------------------------------;
	rts

;=========================================================================;
MoveBG3H:
;=========================================================================;
	ldx	#0000h
	txy
;-------------------------------------------------------------------------;
:	dec	RAM_BG3HOFS+007h,x
	inx
	inx
	inx
	cpx	#0054h
	bmi	:-
;-------------------------------------------------------------------------;
	tyx
;-------------------------------------------------------------------------;
:	dec	RAM_BG3HOFS+007h,x
	inx
	inx
	inx
	inx
	inx
	inx
	cpx	#0054h
	bmi	:-
;-------------------------------------------------------------------------;
	tyx
;-------------------------------------------------------------------------;
:	dec	RAM_BG3HOFS+007h,x
	inx
	inx
	inx
	inx
	inx
	inx
	inx
	inx
	inx
	cpx	#0054h
	bmi	:-
;-------------------------------------------------------------------------;
	rts

;=========================================================================;
BG3Scroll:
;=========================================================================;
	inc	RAM_BG3HOFS+5eh
	inc	RAM_BG3HOFS+5eh
	lda	RAM_BG3HOFS+5eh
	cmp	#08h
	beq	:+
;-------------------------------------------------------------------------;
	rts
;-------------------------------------------------------------------------;
:	stz	RAM_BG3HOFS+5eh
	ldx	#(BG3MAP/2)+1e0h
	stx	REG_VMADDL
	ldy	#0000h
	ldx	RAM_SPR_SCROLL+0ah
;-------------------------------------------------------------------------;
copy_bg3_text:
;-------------------------------------------------------------------------;
	lda	BG3_SCROLL_TEXT,x
	bne	:+
;-------------------------------------------------------------------------;
	ldx	#0000h
	bra	copy_bg3_text
;-------------------------------------------------------------------------;
:	and	#3fh
	cpy	#0020h
	beq	:+
;-------------------------------------------------------------------------;
	sta	REG_VMDATAL
	stz	REG_VMDATAH
	inx
;-------------------------------------------------------------------------;
:	iny
	cpy	#0021h
	bne	copy_bg3_text
;-------------------------------------------------------------------------;
	ldx	#(BG3MAP/2)+5e0h
	stx	REG_VMADDL
	sta	REG_VMDATAL
	stz	REG_VMDATAH
	ldx	RAM_SPR_SCROLL+0ah
	inx
	lda	BG3_SCROLL_TEXT,x
	bne	:+
;-------------------------------------------------------------------------;
	ldx	#0000h
;-------------------------------------------------------------------------;
:	stx	RAM_SPR_SCROLL+00ah
	rts

;=========================================================================;
Setup:
;=========================================================================;
	jsr	ScreenOff
	lda	#BGMODE_1
	sta	REG_BGMODE
	lda	#TM_BG3|TM_BG2|TM_BG1
	sta	REG_TM
	lda	#02h
	sta	REG_CGSWSEL
	lda	#%01100011
	sta	REG_CGADSUB
	lda	#0e0h
	sta	REG_COLDATA
	lda	#TM_OBJ
	sta	REG_TS
	lda	#(BG1MAP>>9)
	sta	REG_BG1SC
	lda	#(BG2MAP>>9)
	sta	REG_BG2SC
	lda	#(BG3MAP>>9)
	sta	REG_BG3SC
	lda	#(BG2GFX>>9)+(BG1GFX>>13)
	sta	REG_BG12NBA
	lda	#(BG3GFX>>13)
	sta	REG_BG34NBA
	lda	#OBSEL_8_16|OBSEL_BASE(OAMGFX)|OBSEL_NN_16K
	sta	REG_OBSEL

	ldx	#0000h
	txy
	stx	REG_VMADDL
;-------------------------------------------------------------------------;
:	stz	REG_VMDATAL
	stz	REG_VMDATAH
	inx
	cpx	#8000h
	bne	:-
;-------------------------------------------------------------------------;
	ldx	#(BG1MAP/2)+1a0h
	stx	REG_VMADDL
	tyx
;-------------------------------------------------------------------------;
:	lda	MIDDLE_TEXT,x
	beq	:+
	and	#3fh
	clc
	cld
	adc	#50h			; use 2nd font
	sta	REG_VMDATAL
	stz	REG_VMDATAH
	inx
	bra	:-
;-------------------------------------------------------------------------;
:	ldx	#(BG3MAP/2)+0a0h
	stx	REG_VMADDL
	jsr	CopyStars
	ldx	#(BG3MAP/2)+4a0h
	stx	REG_VMADDL
	jsr	CopyStars

	lda	#^oam_table
	ldx	#oam_table
	stx	REG_WMADDL
	sta	REG_WMADDH

	lda	#0e0h
	ldx	#0080h
;-------------------------------------------------------------------------;
:	sta	REG_WMDATA
	sta	REG_WMDATA
	stz	REG_WMDATA
	stz	REG_WMDATA
	dex
	bne	:-
;-------------------------------------------------------------------------;
:	stz	REG_WMDATA
	inx
	cpx	#0020h
	bne	:-
;-------------------------------------------------------------------------;
	rts

;=========================================================================;
CopyStars:
;=========================================================================;
	ldx	#0000h
;-------------------------------------------------------------------------;
:	clc
	cld
	lda	STARS,x
	adc	#44h
	sta	REG_VMDATAL
	lda	#08h
	sta	REG_VMDATAH
	inx
	cpx	#0120h
	bne	:-
;-------------------------------------------------------------------------;
	rts

;=========================================================================;
ScreenOff:
;=========================================================================;
	lda	#8fh
;-------------------------------------------------------------------------;
stinid:	sta	REG_INIDISP
	rts
;=========================================================================;
ScreenOn:
;=========================================================================;
	lda	#0fh
	bra	stinid

;=========================================================================;
HDMA:
;=========================================================================;
	ldx	#0000h
	phx
;-------------------------------------------------------------------------;
:	lda	LIST_CGADD,x
	sta	RAM_CGADD,x
	lda	LIST_TM,x
	sta	RAM_TM,x
	inx
	cpx	#01feh
	bmi	:-
;-------------------------------------------------------------------------;
	plx
;-------------------------------------------------------------------------;
:	lda	LIST_CGDATA,x
	sta	RAM_CGDATA,x
	lda	LIST_BG3HOFS,x
	sta	RAM_BG3HOFS,x
	lda	LIST_BG2VOFS,x
	sta	RAM_BG2VOFS,x
	inx
	cpx	#02fdh
	bmi	:-
;-------------------------------------------------------------------------;
	lda	#8fh
	sta	REG_INIDISP
	stz	REG_HDMAEN
	stz	REG_DMAP0
	lda	#DMAP_XFER_MODE_2
	sta	REG_DMAP1
	sta	REG_DMAP2
	sta	REG_DMAP4
	lda	#<REG_CGADD
	sta	REG_BBAD0
	stz	REG_A1T0L
	lda	#>RAM_CGADD
	sta	REG_A1T0H
	stz	REG_A1B0
	lda	#<REG_CGDATA
	sta	REG_BBAD1
	stz	REG_A1T1L
	lda	#>RAM_CGDATA
	sta	REG_A1T1H
	stz	REG_A1B1
	lda	#<REG_BG3HOFS
	sta	REG_BBAD2
	stz	REG_A1T2L
	lda	#>RAM_BG3HOFS
	sta	REG_A1T2H
	stz	REG_A1B2
	stz	REG_DMAP3
	lda	#<REG_TM
	sta	REG_BBAD3
	lda	#<RAM_TM
	sta	REG_A1T3L
	lda	#>RAM_TM
	sta	REG_A1T3H
	stz	REG_A1B3
	lda	#<REG_BG2VOFS
	sta	REG_BBAD4
	stz	REG_A1T4L
	lda	#>RAM_BG2VOFS
	sta	REG_A1T4H
	stz	REG_A1B4
	lda	#%11111
	sta	REG_HDMAEN
	rts

;=========================================================================;
BPL2toBPL4:
;=========================================================================;
	stx	REG_VMADDL

	ldx	#0000h
	txy
;-------------------------------------------------------------------------;
:	lda	7f0000h,x
	sta	REG_VMDATAL
	stz	REG_VMDATAH
	inx
	iny
	cpy	#0008h
	bne	:-
;-------------------------------------------------------------------------;
	ldy	#0000h
	sty	REG_VMDATAL
	sty	REG_VMDATAL
	sty	REG_VMDATAL
	sty	REG_VMDATAL
	sty	REG_VMDATAL
	sty	REG_VMDATAL
	sty	REG_VMDATAL
	sty	REG_VMDATAL
	cpx	#FONT_LEN
	bmi	:-
;-------------------------------------------------------------------------;
	rts


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
BG2_SINE:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	$00,$00,$00,$00,$00,$01,$01,$01
	.byte	$02,$02,$02,$03,$03,$04,$04,$05
	.byte	$06,$06,$07,$07,$08,$09,$09,$0a
	.byte	$0a,$0b,$0c,$0c,$0d,$0d,$0e,$0e
	.byte	$0e,$0f,$0f,$0f,$10,$10,$10,$10
	.byte	$10,$10,$10,$10,$10,$0f,$0f,$0f
	.byte	$0e,$0e,$0e,$0d,$0d,$0c,$0c,$0b
	.byte	$0a,$0a,$09,$09,$08,$07,$07,$06
	.byte	$06,$05,$04,$04,$03,$03,$02,$02
	.byte	$02,$01,$01,$01,$00,$00,$00,$00
	.byte	$ff
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
CREDIT:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	" LSB/KWT"
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
CREDIT_END:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
LIST_BG1VOFS:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	$04,$04,$04,$05,$05,$06,$06,$07
	.byte	$08,$09,$0a,$0b,$0c,$0e,$0f,$10
	.byte	$11,$12,$13,$14,$15,$16,$17,$18
	.byte	$18,$19,$19,$19,$19,$19,$19,$18
	.byte	$18,$17,$16,$15,$14,$13,$12,$11
	.byte	$10,$0f,$0e,$0c,$0b,$0a,$09,$08
	.byte	$07,$06,$06,$05,$05,$04,$04,$00
	.byte	$00,$00,$00,$00,$01,$01,$01,$02
	.byte	$02,$03,$04,$04,$05,$06,$07,$08
	.byte	$09,$0a,$0b,$0d,$0e,$0f,$10,$12
	.byte	$13,$15,$16,$18,$19,$1b,$1c,$1e
	.byte	$1f,$21,$22,$24,$25,$27,$28,$2a
	.byte	$2b,$2d,$2e,$30,$31,$32,$33,$35
	.byte	$36,$37,$38,$39,$3a,$3b,$3c,$3c
	.byte	$3d,$3e,$3e,$3f,$3f,$3f,$40,$40
	.byte	$40,$40,$40,$40,$40,$3f,$3f,$3f
	.byte	$3e,$3e,$3d,$3c,$3c,$3b,$3a,$39
	.byte	$38,$37,$36,$35,$33,$32,$31,$30
	.byte	$2e,$2d,$2b,$2a,$28,$27,$25,$24
	.byte	$22,$21,$1f,$1e,$1c,$1b,$19,$18
	.byte	$16,$15,$13,$12,$10,$0f,$0e,$0d
	.byte	$0b,$0a,$09,$08,$07,$06,$05,$04
	.byte	$04,$03,$02,$02,$01,$01,$01,$00
	.byte	$00,$00,$ff
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
LIST_BG2HOFS:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	$00,$00,$00,$00,$01,$01,$01,$02
	.byte	$02,$03,$04,$04,$05,$06,$07,$08
	.byte	$09,$0a,$0b,$0d,$0e,$0f,$10,$12
	.byte	$13,$15,$16,$18,$19,$1b,$1c,$1e
	.byte	$1f,$21,$22,$24,$25,$27,$28,$2a
	.byte	$2b,$2d,$2e,$30,$31,$32,$33,$35
	.byte	$36,$37,$38,$39,$3a,$3b,$3c,$3c
	.byte	$3d,$3e,$3e,$3f,$3f,$3f,$40,$40
	.byte	$40,$40,$40,$40,$40,$3f,$3f,$3f
	.byte	$3e,$3e,$3d,$3c,$3c,$3b,$3a,$39
	.byte	$38,$37,$36,$35,$33,$32,$31,$30
	.byte	$2e,$2d,$2b,$2a,$28,$27,$25,$24
	.byte	$22,$21,$1f,$1e,$1c,$1b,$19,$18
	.byte	$16,$15,$13,$12,$10,$0f,$0e,$0d
	.byte	$0b,$0a,$09,$08,$07,$06,$05,$04
	.byte	$04,$03,$02,$02,$01,$01,$01,$00
	.byte	$00,$00,$ff
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
LIST_BG2VOFS:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	$0d,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$05,$01,$17,$07,$5f,$1f,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$06,$07,$18,$1f,$60,$7f,$00
	.byte	$00,$00,$00,$01,$00,$17,$07,$bf
	.byte	$3f,$fe,$ff,$eb,$f3,$5f,$9f,$00
	.byte	$00,$00,$00,$01,$01,$18,$1f,$c0
	.byte	$ff,$01,$ff,$1c,$f0,$e0,$80,$00
	.byte	$00,$17,$07,$7f,$7f,$ff,$ff,$e5
	.byte	$f9,$bf,$3f,$ff,$ff,$f9,$fa,$00
	.byte	$00,$18,$1f,$80,$ff,$00,$ff,$1e
	.byte	$f0,$c0,$00,$00,$00,$06,$00,$00
	.byte	$00,$ff,$ff,$ff,$ff,$ff,$ff,$ff
	.byte	$ff,$ff,$ff,$ff,$ff,$01,$fe,$00
	.byte	$00,$00,$ff,$00,$ff,$00,$ff,$00
	.byte	$00,$00,$00,$00,$00,$00,$82,$00
	.byte	$00,$d0,$c0,$fd,$fc,$ff,$ff,$4f
	.byte	$3f,$eb,$e7,$fd,$ff,$3f,$be,$00
	.byte	$00,$30,$f0,$03,$ff,$00,$ff,$f0
	.byte	$1f,$1c,$07,$02,$03,$c1,$00,$00
	.byte	$00,$00,$00,$03,$03,$07,$07,$8f
	.byte	$8f,$df,$dd,$ff,$fb,$ff,$f7,$00
	.byte	$00,$00,$00,$04,$07,$88,$8f,$50
	.byte	$df,$22,$fc,$04,$f8,$08,$f0,$00
	.byte	$00,$00,$00,$ff,$ff,$ff,$ff,$ff
	.byte	$ff,$ff,$ff,$ff,$ff,$ff,$ff,$00
	.byte	$00,$00,$00,$00,$ff,$00,$ff,$00
	.byte	$ff,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$c0,$c0,$c0,$c0,$c0
	.byte	$c0,$c0,$c0,$c0,$c0,$ff,$ff,$00
	.byte	$00,$00,$00,$00,$c0,$00,$c0,$00
	.byte	$c0,$00,$c0,$00,$c0,$00,$ff,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$ff,$ff,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$ff,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$fd,$fc,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$03,$ff,$00
	.byte	$00,$00,$00,$01,$01,$03,$03,$07
	.byte	$06,$0f,$0d,$1f,$1b,$bf,$37,$00
	.byte	$00,$01,$01,$02,$03,$04,$07,$09
	.byte	$0e,$12,$1c,$24,$38,$c8,$f0,$03
	.byte	$03,$ff,$fe,$ff,$fd,$ff,$7f,$ff
	.byte	$ff,$ff,$ff,$c0,$bf,$80,$7f,$04
	.byte	$07,$01,$fe,$02,$fc,$80,$00,$00
	.byte	$00,$00,$00,$40,$00,$80,$00,$c0
	.byte	$60,$80,$c0,$00,$80,$ff,$ff,$ff
	.byte	$ff,$ff,$ff,$00,$ff,$00,$ff,$a0
	.byte	$1f,$40,$3f,$80,$7f,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$ff,$fe,$fe
	.byte	$fe,$ff,$ff,$03,$ff,$03,$ff,$00
	.byte	$ff,$00,$ff,$00,$ff,$01,$00,$01
	.byte	$00,$00,$00,$00,$00,$00,$00,$1f
	.byte	$00,$1f,$00,$1f,$00,$1f,$00,$1f
	.byte	$00,$9f,$80,$0f,$80,$8d,$00,$00
	.byte	$ff,$00,$ff,$00,$ff,$00,$ff,$00
	.byte	$ff,$80,$7f,$80,$7f,$81
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
LIST_BG3HOFS:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	$01,$00,$00,$66,$00,$00,$03,$0f
	.byte	$00,$03,$0c,$00,$01,$09,$00,$03
	.byte	$08,$00,$03,$05,$00,$03,$02,$00
	.byte	$02,$0e,$00,$02,$0c,$00,$04,$0a
	.byte	$00,$02,$06,$00,$04,$04,$00,$01
	.byte	$0f,$00,$04,$0e,$00,$03,$0a,$00
	.byte	$03,$07,$00,$02,$04,$00,$03,$02
	.byte	$00,$01,$0e,$00,$02,$0d,$00,$02
	.byte	$0b,$00,$03,$09,$00,$01,$06,$00
	.byte	$02,$05,$00,$02,$03,$00,$03,$01
	.byte	$00,$03,$0d,$00,$02,$0a,$00,$01
	.byte	$08,$00,$01,$07,$00,$2f,$06,$00
	.byte	$00,$00,$00,$01,$02,$62,$02,$04
	.byte	$00,$30,$07,$08,$01,$08,$04,$00
	.byte	$00,$0d,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$05,$01,$17,$07,$5f,$1f
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$06,$07,$18,$1f,$60,$7f
	.byte	$00,$00,$00,$00,$01,$00,$17,$07
	.byte	$bf,$3f,$fe,$ff,$eb,$f3,$5f,$9f
	.byte	$00,$00,$00,$00,$01,$01,$18,$1f
	.byte	$c0,$ff,$01,$ff,$1c,$f0,$e0,$80
	.byte	$00,$00,$17,$07,$7f,$7f,$ff,$ff
	.byte	$e5,$f9,$bf,$3f,$ff,$ff,$f9,$fa
	.byte	$00,$00,$18,$1f,$80,$ff,$00,$ff
	.byte	$1e,$f0,$c0,$00,$00,$00,$06,$00
	.byte	$00,$00,$ff,$ff,$ff,$ff,$ff,$ff
	.byte	$ff,$ff,$ff,$ff,$ff,$ff,$01,$fe
	.byte	$00,$00,$00,$ff,$00,$ff,$00,$ff
	.byte	$00,$00,$00,$00,$00,$00,$00,$82
	.byte	$00,$00,$d0,$c0,$fd,$fc,$ff,$ff
	.byte	$4f,$3f,$eb,$e7,$fd,$ff,$3f,$be
	.byte	$00,$00,$30,$f0,$03,$ff,$00,$ff
	.byte	$f0,$1f,$1c,$07,$02,$03,$c1,$00
	.byte	$00,$00,$00,$00,$03,$03,$07,$07
	.byte	$8f,$8f,$df,$dd,$ff,$fb,$ff,$f7
	.byte	$00,$00,$00,$00,$04,$07,$88,$8f
	.byte	$50,$df,$22,$fc,$04,$f8,$08,$f0
	.byte	$00,$00,$00,$00,$ff,$ff,$ff,$ff
	.byte	$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
	.byte	$00,$00,$00,$00,$00,$ff,$00,$ff
	.byte	$00,$ff,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$c0,$c0,$c0,$c0
	.byte	$c0,$c0,$c0,$c0,$c0,$c0,$ff,$ff
	.byte	$00,$00,$00,$00,$00,$c0,$00,$c0
	.byte	$00,$c0,$00,$c0,$00,$c0,$00,$ff
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$ff,$ff
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$ff
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$fd,$fc
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$03,$ff
	.byte	$00,$00,$00,$00,$01,$01,$03,$03
	.byte	$07,$06,$0f,$0d,$1f,$1b,$bf,$37
	.byte	$00,$00,$01,$01,$02,$03,$04,$07
	.byte	$09,$0e,$12,$1c,$24,$38,$c8,$f0
	.byte	$03,$03,$ff,$fe,$ff,$fd,$ff,$7f
	.byte	$ff,$ff,$ff,$ff,$c0,$bf
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
LIST_CGADD:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte $0d,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
	.byte $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
	.byte $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
	.byte $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
	.byte $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
	.byte $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
	.byte $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
	.byte $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
	.byte $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
	.byte $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
	.byte $01,$00,$01,$00,$01,$00,$01,$00,$04,$00,$01,$00,$01,$00,$01,$00
	.byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
	.byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
	.byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
	.byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
	.byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
	.byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
	.byte $01,$01,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$01,$01,$01
	.byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$00,$08,$00
	.byte $01,$09,$01,$81,$04,$91,$00,$00
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
LIST_CGDATA:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	$0d
	.word	$0000
	.byte	$01
	.word	$1000
	.byte	$01
	.word	$1c00
	.byte	$01
	.word	$2800
	.byte	$01
	.word	$3400
	.byte	$01
	.word	$4000
	.byte	$01
	.word	$4c00
	.byte	$01
	.word	$5800
	.byte	$01
	.word	$6400
	.byte	$01
	.word	$7000
	.byte	$01
	.word	$7c00
	.byte	$01
	.word	$7c01
	.byte	$01
	.word	$7c02
	.byte	$01
	.word	$7803
	.byte	$01
	.word	$7404
	.byte	$01
	.word	$7005
	.byte	$01
	.word	$6c06
	.byte	$01
	.word	$6807
	.byte	$01
	.word	$6408
	.byte	$01
	.word	$6009
	.byte	$01
	.word	$5c0a
	.byte	$01
	.word	$580b
	.byte	$01
	.word	$540c
	.byte	$01
	.word	$500d
	.byte	$01
	.word	$4c0e
	.byte	$01
	.word	$480f
	.byte	$01
	.word	$4410
	.byte	$01
	.word	$4011
	.byte	$01
	.word	$3c12
	.byte	$01
	.word	$3813
	.byte	$01
	.word	$3414
	.byte	$01
	.word	$3015
	.byte	$01
	.word	$2c16
	.byte	$01
	.word	$2817
	.byte	$01
	.word	$2418
	.byte	$01
	.word	$2019
	.byte	$01
	.word	$1c1a
	.byte	$01
	.word	$181b
	.byte	$01
	.word	$141c
	.byte	$01
	.word	$101d
	.byte	$01
	.word	$0c1e
	.byte	$01
	.word	$081f
	.byte	$01
	.word	$041f
	.byte	$01
	.word	$041f
	.byte	$01
	.word	$081f
	.byte	$01
	.word	$0c1e
	.byte	$01
	.word	$101d
	.byte	$01
	.word	$141c
	.byte	$01
	.word	$181b
	.byte	$01
	.word	$1c1a
	.byte	$01
	.word	$2019
	.byte	$01
	.word	$2418
	.byte	$01
	.word	$2817
	.byte	$01
	.word	$2c16
	.byte	$01
	.word	$3015
	.byte	$01
	.word	$3414
	.byte	$01
	.word	$3813
	.byte	$01
	.word	$3c12
	.byte	$01
	.word	$4011
	.byte	$01
	.word	$4410
	.byte	$01
	.word	$480f
	.byte	$01
	.word	$4c0e
	.byte	$01
	.word	$500d
	.byte	$01
	.word	$540c
	.byte	$01
	.word	$580b
	.byte	$01
	.word	$5c0a
	.byte	$01
	.word	$6009
	.byte	$01
	.word	$6408
	.byte	$01
	.word	$6807
	.byte	$01
	.word	$6c06
	.byte	$01
	.word	$7005
	.byte	$01
	.word	$7404
	.byte	$01
	.word	$7803
	.byte	$01
	.word	$7c02
	.byte	$01
	.word	$7c01
	.byte	$01
	.word	$7c00
	.byte	$01
	.word	$7000
	.byte	$01
	.word	$6400
	.byte	$01
	.word	$5800
	.byte	$01
	.word	$4c00
	.byte	$01
	.word	$4000
	.byte	$01
	.word	$3400
	.byte	$01
	.word	$2800
	.byte	$01
	.word	$1c00
	.byte	$04
	.word	$0000
	.byte	$01
	.word	LINE_COLOR2
	.byte	$01
	.word	LINE_COLOR1
	.byte	$01
	.word	$0000
	.byte	$01	; bg1 middle text
	.word	$0108
	.byte	$01
	.word	$0129
	.byte	$01
	.word	$014a
	.byte	$01
	.word	$016b
	.byte	$01
	.word	$018c
	.byte	$01
	.word	$01ad
	.byte	$01
	.word	$01ce
	.byte	$01
	.word	$01ef
	.byte	$01
	.word	$0210
	.byte	$01
	.word	$0231
	.byte	$01
	.word	$0252
	.byte	$01
	.word	$0273
	.byte	$01
	.word	$0294
	.byte	$01
	.word	$02b5
	.byte	$01
	.word	$02d6
	.byte	$01
	.word	$02f7
	.byte	$01
	.word	$0318
	.byte	$01
	.word	$0339
	.byte	$01
	.word	$035a
	.byte	$01
	.word	$037b
	.byte	$01
	.word	$039c
	.byte	$01
	.word	$03bd
	.byte	$01
	.word	$03de
	.byte	$01
	.word	$03ff
	.byte	$01
	.word	$03de
	.byte	$01
	.word	$03bd
	.byte	$01
	.word	$039c
	.byte	$01
	.word	$037b
	.byte	$01
	.word	$035a
	.byte	$01
	.word	$0339
	.byte	$01
	.word	$0318
	.byte	$01
	.word	$02f7
	.byte	$01
	.word	$02d6
	.byte	$01
	.word	$02b5
	.byte	$01
	.word	$0294
	.byte	$01
	.word	$0273
	.byte	$01
	.word	$0252
	.byte	$01
	.word	$0231
	.byte	$01
	.word	$0210
	.byte	$01
	.word	$01ef
	.byte	$01
	.word	$01ce
	.byte	$01
	.word	$01ad
	.byte	$01
	.word	$018c
	.byte	$01
	.word	$016b
	.byte	$01
	.word	$014a
	.byte	$01
	.word	$0129
	.byte	$01
	.word	$0108
	.byte	$01
	.word	$00e7
	.byte	$01
	.word	$00c6
	.byte	$01
	.word	LINE_COLOR1
	.byte	$01
	.word	LINE_COLOR2
	.byte	$01
	.word	$0000
	.byte	$01
	.word	LINE_COLOR1
	.byte	$01
	.word	SCROLL_BG_COLOR
	.byte	$01		; bg3 scroll colors
	.word	$7c1f
	.byte	$01
	.word	$701c
	.byte	$01
	.word	$6419
	.byte	$01
	.word	$5816
	.byte	$01
	.word	$4c13
	.byte	$01
	.word	$4010
	.byte	$01
	.word	$340d
	.byte	$01
	.word	$280a
	.byte	$01
	.word	LINE_COLOR1
	.byte	$08
	.word	$0000
	.byte	$01
	.word	STAR_COLOR
	.byte	$01
	.word	SPRITE_COLOR
	.byte	$04
	.word	$00ff
	.byte	$00
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
LIST_TM:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	$01,$02,$62,$02,$04,$00,$30,$07
	.byte	$08,$01,$08,$04,$00,$00,$0d,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$01,$00,$00,$01,$00,$00
	.byte	$01,$00,$00,$01,$00,$00,$01,$00
	.byte	$00,$01,$00,$00,$01,$00,$00,$01
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$05
	.byte	$01,$17,$07,$5f,$1f,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$06
	.byte	$07,$18,$1f,$60,$7f,$00,$00,$00
	.byte	$00,$01,$00,$17,$07,$bf,$3f,$fe
	.byte	$ff,$eb,$f3,$5f,$9f,$00,$00,$00
	.byte	$00,$01,$01,$18,$1f,$c0,$ff,$01
	.byte	$ff,$1c,$f0,$e0,$80,$00,$00,$17
	.byte	$07,$7f,$7f,$ff,$ff,$e5,$f9,$bf
	.byte	$3f,$ff,$ff,$f9,$fa,$00,$00,$18
	.byte	$1f,$80,$ff,$00,$ff,$1e,$f0,$c0
	.byte	$00,$00,$00,$06,$00,$00,$00,$ff
	.byte	$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
	.byte	$ff,$ff,$ff,$01,$fe,$00,$00,$00
	.byte	$ff,$00,$ff,$00,$ff,$00,$00,$00
	.byte	$00,$00,$00,$00,$82,$00,$00,$d0
	.byte	$c0,$fd,$fc,$ff,$ff,$4f,$3f,$eb
	.byte	$e7,$fd,$ff,$3f,$be,$00,$00,$30
	.byte	$f0,$03,$ff,$00,$ff,$f0,$1f,$1c
	.byte	$07,$02,$03,$c1,$00,$00,$00,$00
	.byte	$00,$03,$03,$07,$07,$8f,$8f,$df
	.byte	$dd,$ff,$fb,$ff,$f7,$00,$00,$00
	.byte	$00,$04,$07,$88,$8f,$50,$df,$22
	.byte	$fc,$04,$f8,$08,$f0,$00,$00,$00
	.byte	$00,$ff,$ff,$ff,$ff,$ff,$ff,$ff
	.byte	$ff,$ff,$ff,$ff,$ff,$00
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
SCROLL_SINE:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	$00,$00,$00,$01,$02,$02,$03,$05
	.byte	$06,$07,$09,$0b,$0c,$0e,$10,$12
	.byte	$14,$16,$18,$1a,$1c,$1d,$1f,$21
	.byte	$22,$23,$25,$26,$26,$27,$28,$28
	.byte	$28,$28,$28,$27,$26,$26,$25,$23
	.byte	$22,$21,$1f,$1d,$1c,$1a,$18,$16
	.byte	$14,$12,$10,$0e,$0c,$0b,$09,$07
	.byte	$06,$05,$03,$02,$02,$01,$00,$00
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
SPRITE_SINE:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	$04,$05,$07,$0a,$0e,$11,$13,$14,$13,$11,$0e,$0a,$07,$05
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
SPRITE_SINE_END:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
STARS:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	$00,$00,$01,$00,$02,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$01,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$01,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$02,$00,$00,$00,$00,$00,$00
	.byte	$00,$02,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$02,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$01,$00,$00
	.byte	$00,$00,$00,$02,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$01,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$01,$00,$00,$00,$00,$02,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$02,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$01,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$01,$00,$00
	.byte	$00,$00,$00,$02,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$01,$00,$00,$00,$00,$00,$00,$01
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$01,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$02,$00,$00
	.byte	$00,$02,$00,$00,$00,$00,$00,$00
	.byte	$00,$00,$00,$00,$00,$00,$00,$00
	.byte	$02,$00,$00,$00,$00,$00,$00,$00
	.byte	$02,$00,$00,$00,$00,$00,$01,$00
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
MIDDLE_TEXT:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
		;12345678901234567890123456789012
	.byte	"    FOR CONSOLE BACKUP UNITS,   "
	.byte	"           WRITE  TO:           "
	.byte	"         P.0. BOX 155           "
	.byte	"     SANTA PONSA,MALLORCA       "
	.byte	"            SPAIN               "
	.byte	"                                ",0
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
BG3_SCROLL_TEXT:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	"                                "
	.byte	"  GREETINGS GO TO:   ELITENDO - PREMIERE - ANTHROX - "
	.byte	"CENSOR - SABOTAGE - ANDEVERON AND THE LEGEND   ",0
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
SPRITE_SCROLL_TEXT:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	"                      "
	.byte	"            TODAY, (APRIL 25 1994) WE BRING "
	.byte	"YOU SUPER BOMBERMAN 2 FROM HUDSON!! TO BUY "
	.byte	"CONSOLE COPIERS FOR MEGADRIVE/SUPER FAMICOM "
	.byte	"CALL US AT +34-71694779 (VOICE) AND +34-71694799 "
	.byte	"(FAX). SEE YA!",0
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;

