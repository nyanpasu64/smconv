;-------------------------------------------------------------------------;
.include "snes.inc"
.include "snes_joypad.inc"
;-------------------------------------------------------------------------;
.import DoXkaliberShit
;-------------------------------------------------------------------------;
.global _nmi, main
;-------------------------------------------------------------------------;
.exportzp frame_ready
;-------------------------------------------------------------------------;
.export oam_hitable, oam_table
;-------------------------------------------------------------------------;


;/////////////////////////////////////////////////////////////////////////;
.zeropage
;/////////////////////////////////////////////////////////////////////////;


;-------------------------------------------------------------------------;
frame_ready:
	.res	1
;-------------------------------------------------------------------------;


;/////////////////////////////////////////////////////////////////////////;
.bss
;/////////////////////////////////////////////////////////////////////////;


;-------------------------------------------------------------------------;
oam_table:
	.res	(128*4)
oam_hitable:
	.res	(128/4)
;-------------------------------------------------------------------------;


;/////////////////////////////////////////////////////////////////////////;
.code
;/////////////////////////////////////////////////////////////////////////;


;-------------------------------------------------------------------------;
	.a8
	.i16
;-------------------------------------------------------------------------;


;.........................................................................;
; program entry point
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
main:
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
	jmp	DoXkaliberShit




;.........................................................................;
; NMI irq handler
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
_nmi:
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
	rep	#30h			; push a,x,y
	pha				;
	phx				;
	phy				;-----------------------
	sep	#20h			; 8bit akku
;---------------------------------------------------------------
	lda	frame_ready		; skip frame update if not ready!
	beq	_frame_not_ready	;-----------------------
	stz	REG_OAMADDL		; reset oam access
	stz	REG_OAMADDH		;
					;-----------------------
	lda	#%00000010		; copy oam buffers
	sta	REG_DMAP6		;
	lda	#REG_OAMDATA&255	;
	sta	REG_BBAD6		;
	ldy	#oam_table&65535	;
	lda	#^oam_table		;
	sty	REG_A1T6L		;
	sta	REG_A1B6		;
	ldy	#544			;	
	sty	REG_DAS6L		;
	lda	#%01000000		;
	sta	REG_MDMAEN		;--------------------------
_frame_not_ready:			;
	jsr	joyRead			; read joypads
					;--------------------------
	lda	REG_TIMEUP		; read from REG_TIMEUP (?)
					;
	rep	#30h			; pop a,x,y
	ply				;
	plx				;
	pla				;
	rti				; return

;/////////////////////////////////////////////////////////////////////////;
.segment "HDATA"
;/////////////////////////////////////////////////////////////////////////;
.segment "HRAM2"
;/////////////////////////////////////////////////////////////////////////;
