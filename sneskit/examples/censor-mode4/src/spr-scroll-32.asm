;-------------------------------------------------------------------------;
.include "snes.inc"
.include "snes_zvars.inc"
.include "sprite_scroll32.inc"
;-------------------------------------------------------------------------;
.import oam_hitable, oam_table
;-------------------------------------------------------------------------;


;-------------------------------------------------------------------------;
MAX_SPRITES = 9
;-------------------------------------------------------------------------;

;-------------------------------------------------------------------------;
OAMGFX = 08000h
;-------------------------------------------------------------------------;


;-------------------------------------------------------------------------;
text		=	memptr
sprite_pal	=	0500h
spr_xpos	=	sprite_pal+9
bouncey		=	spr_xpos+(MAX_SPRITES*2)
oam_hi		=	bouncey-1
;-------------------------------------------------------------------------;


;/////////////////////////////////////////////////////////////////////////;
.bss
;/////////////////////////////////////////////////////////////////////////;


;-------------------------------------------------------------------------;
current_sprite:
	.res 2
current_sprite_attr:
	.res 2
dma_src:
	.res 2
ram_font:
	.res 2
scroll_sine_index:
	.res 1
scroll_sine_ypos:
	.res 1
scroll_ypos:
	.res 1
storage1:
	.res 2
storage2:
	.res 2
text_index:
	.res 2
vram_addr_index:
	.res 2
vram_address:
	.res 2
ypos_sbc:
	.res 2
;-------------------------------------------------------------------------;


;/////////////////////////////////////////////////////////////////////////;
.code
;/////////////////////////////////////////////////////////////////////////;


;-------------------------------------------------------------------------;
	.a16
	.i16
;-------------------------------------------------------------------------;


;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
SpriteScroll32:
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
	rep	#30h

	ldx	#0000h
;-------------------------------------------------------------------------;
:	lda	SPRITE_XPOS,x
	sec
	sbc	ypos_sbc
	sta	spr_xpos,x
	inx
	inx
	cpx	#MAX_SPRITES*2
	bne	:-
;-------------------------------------------------------------------------;
	lda	#0000h

	sep	#20h

	sta	current_sprite
		;+-------------	Obj other than Sprite 0 may be given priority
		;|+++---------- OAM address (lotable)
	ldx	#8000h
	stx	REG_OAMADDL
	ldy	current_sprite_attr
	ldx	#0000h
;-------------------------------------------------------------------------;
:	lda	current_sprite
	asl a
	tax
	lda	spr_xpos,x
	sta	REG_OAMDATA	; xpos

	lda	current_sprite
	asl a
	asl a
	asl a
	asl a
	asl a
	sec
	sbc	ypos_sbc
	clc
	adc	bouncey
	tax
	lda	SINE_OF_DOOM,x
	lsr a
	lsr a
	clc
	adc	scroll_sine_ypos
	sta	REG_OAMDATA	; ypos

	lda	SPRITE_TILE,y
	sta	REG_OAMDATA	; tile
	ldx	current_sprite
	lda	sprite_pal,x
	ora	#OAM_PRI3
	sta	REG_OAMDATA	; pal
	iny
	inc	current_sprite
	lda	current_sprite
	cmp	#MAX_SPRITES
	bne	:-
;-------------------------------------------------------------------------;
	rep	#30h

	ldx	#0000h
	stx	storage2
	txa
	ina
	sta	storage1
	clc
;-------------------------------------------------------------------------;
:	lda	spr_xpos,x
	and	#0ff00h
	beq	:+
;-------------------------------------------------------------------------;
	lda	storage2
	ora	storage1
	sta	storage2
;-------------------------------------------------------------------------;
:	asl	storage1
	asl	storage1
	inx
	inx
	cpx	#0010h
	bne	:--
;-------------------------------------------------------------------------;
	sep	#20h

	ldx	#8100h
	stx	REG_OAMADDL
	lda	storage2
	ora	#%10101010
	sta	REG_OAMDATA
	lda	storage1+1
	ora	#%10101010
	sta	REG_OAMDATA
	dec	bouncey
	inc	scroll_sine_index
	lda	scroll_sine_index
	cmp	#30h
	bne	:+
;-------------------------------------------------------------------------;
	lda	#00h
:	sta	scroll_sine_index
	xba
	lda	#00h
	xba
	tax
	lda	SCROLL_SINE,x
	eor	#0ffh
	clc
	adc	scroll_ypos
	sta	scroll_sine_ypos
	lda	oam_hi
	beq	:+
;-------------------------------------------------------------------------;
	lda	#%1010111
	bra	:++
;-------------------------------------------------------------------------;
:	lda	#%1010110
;-------------------------------------------------------------------------;
:	sta	REG_OAMDATA
	rts


;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
SpriteScroll32Attributes:
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
	rep	#30h

	lda	ypos_sbc
	clc
	adc	#02h
	cmp	#20h
	beq	:+
;-------------------------------------------------------------------------;
	sta	ypos_sbc
	bra	atrext
;-------------------------------------------------------------------------;
:	stz	ypos_sbc
	inc	current_sprite_attr
	lda	current_sprite_attr
	cmp	#MAX_SPRITES
	bne	:+
;-------------------------------------------------------------------------;
	stz	current_sprite_attr
;-------------------------------------------------------------------------;
:	sep	#20h

	ldy	#0000h
;-------------------------------------------------------------------------;
:	lda	sprite_pal+1,y
	sta	sprite_pal,y
	iny
	cpy	#MAX_SPRITES-1
	bne	:-
;-------------------------------------------------------------------------;
	ldy	text_index
;-------------------------------------------------------------------------;
:	lda	(text),y
	bne	:+
;-------------------------------------------------------------------------;
	ldy	#0000h		; end of text reached, reset text_index
	bra	:-
;-------------------------------------------------------------------------;
:	iny
	sty	text_index
	cmp	#20h
	bne	:++
;-------------------------------------------------------------------------;
	inc	sprite_pal+8
	inc	sprite_pal+8
	lda	sprite_pal+8
	cmp	#OAM_PAL7
	bne	:+
;-------------------------------------------------------------------------;
	lda	#OAM_PAL2
	sta	sprite_pal+8
;-------------------------------------------------------------------------;
:	lda	#20h
;-------------------------------------------------------------------------;
:	sec
	sbc	#20h
	cmp	#40h
	bcc	:+
;-------------------------------------------------------------------------;
	sec
	sbc	#20h
;-------------------------------------------------------------------------;
:	sta	vram_addr_index
atrext:	sep	#20h
	rts


;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
SpriteScroll32Setup:
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
	rep	#10h
	sep	#20h

	sta	text+2
	stx	text
	sty	ram_font
	xba
	sta	scroll_ypos

	lda	#OBSEL_8_32|OBSEL_BASE(OAMGFX)
	sta	REG_OBSEL
	ldx	#0000h
	stx	ypos_sbc
	stx	current_sprite_attr
	stz	bouncey

	ldx	#0080h
	lda	#0e0h
:	sta	REG_OAMDATA
	sta	REG_OAMDATA
	stz	REG_OAMDATA
	stz	REG_OAMDATA
	dex
	bne	:-

	ldx	#8100h
	stx	REG_OAMADDL
	ldx	#0010h
:	stz	REG_OAMDATA
	stz	REG_OAMDATA
	dex
	bpl	:-
;-------------------------------------------------------------------------;
	lda	#OAM_PAL2
	sta	sprite_pal
	sta	sprite_pal+1
	sta	sprite_pal+2
	sta	sprite_pal+3
	sta	sprite_pal+4
	sta	sprite_pal+5
	sta	sprite_pal+6
	sta	sprite_pal+7
	sta	sprite_pal+8
	sta	sprite_pal+9

	ldx	#0000h
	stx	text_index
	stx	vram_addr_index

	rts


;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
TransferOAMGfxToVram:
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
	rep	#30h

	lda	vram_addr_index
	asl a
	tax
	lda	f:RAM_LOCATION,x
	clc
	adc	ram_font
	sta	dma_src
	lda	current_sprite_attr
	asl a
	tax
	lda	f:LIST_VMADD,x
	sta	vram_address
	sta	REG_VMADDL

	sep	#20h

	lda	#DMAP_XFER_MODE_1
	sta	REG_DMAP4
	lda	#7eh
	sta	REG_A1B4
	lda	#<REG_VMDATA
	sta	REG_BBAD4

	jsr	:+
	jsr	:+
	jsr	:+
	jsr	SetDMASourceAddress

	lda	#%10000
	sta	REG_MDMAEN

	rts
;-------------------------------------------------------------------------;
:
;-------------------------------------------------------------------------;
	jsr	SetDMASourceAddress
	jsr	IncreaseSourceAndVRAMAddress

	rts
;-------------------------------------------------------------------------;
SetDMASourceAddress:
;-------------------------------------------------------------------------;
	ldx	dma_src		; DMA source address
	stx	REG_A1T4L
	ldx	#0080h		; DMA size
	stx	REG_DAS4L

	rts
;-------------------------------------------------------------------------;
IncreaseSourceAndVRAMAddress:
;-------------------------------------------------------------------------;
	inc	dma_src+1	; source address
	inc	dma_src+1
	inc	vram_address+1	; vram address

	lda	#%10000
	sta	REG_MDMAEN

	ldx	vram_address
	stx	REG_VMADDL

	rts


;/////////////////////////////////////////////////////////////////////////;
.code
;/////////////////////////////////////////////////////////////////////////;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
LIST_VMADD:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.word	OAMGFX/2+800h,OAMGFX/2+000h,OAMGFX/2+040h,OAMGFX/2+080h
	.word	OAMGFX/2+0c0h,OAMGFX/2+400h,OAMGFX/2+440h,OAMGFX/2+480h
	.word	OAMGFX/2+4c0h
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
RAM_LOCATION:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.word	0000h,0080h,0100h,0180h,0800h,0880h,0900h,0980h
	.word	1000h,1080h,9100h,9180h,1800h,1880h,1900h,1980h

	.word	2000h,2080h,2100h,2180h,2800h,2880h,2900h,2980h
	.word	3000h,3080h,3100h,3180h,3800h,3880h,3900h,3980h

	.word	4000h,4080h,4100h,4180h,4800h,4880h,4900h,4980h
	.word	5000h,5080h,5100h,5180h,5800h,5880h,5900h,5980h

	.word	6000h,6080h,6100h,6180h,6800h,6880h,6900h,6980h
	.word	7000h,7080h,7100h,7180h,7800h,7880h,7900h,7980h
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
SCROLL_SINE:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	00h,02h,05h,07h,0ah,0ch,0fh,11h
	.byte	14h,16h,18h,1ah,1ch,1eh,1fh,21h
	.byte	22h,23h,24h,25h,26h,27h,27h,27h
	.byte	28h,27h,27h,27h,26h,25h,24h,23h
	.byte	22h,21h,1fh,1eh,1ch,1ah,18h,16h
	.byte	14h,11h,0fh,0ch,0ah,07h,05h,02h
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
SINE_OF_DOOM:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	$80,$83,$86,$89,$8c,$8f,$92,$95
	.byte	$98,$9b,$9e,$a1,$a4,$a7,$aa,$ad
	.byte	$b0,$b3,$b6,$b9,$bc,$be,$c1,$c4
	.byte	$c6,$c9,$cb,$ce,$d0,$d3,$d5,$d7
	.byte	$d9,$dc,$de,$e0,$e2,$e4,$e6,$e8
	.byte	$e9,$eb,$ed,$ee,$f0,$f1,$f2,$f4
	.byte	$f5,$f6,$f7,$f8,$f9,$fa,$fb,$fc
	.byte	$fc,$fd,$fd,$fe,$fe,$fe,$fe,$fe
	.byte	$fe,$fe,$fe,$fe,$fe,$fd,$fd,$fd
	.byte	$fc,$fb,$fb,$fa,$f9,$f8,$f7,$f6
	.byte	$f5,$f3,$f2,$f1,$ef,$ee,$ec,$ea
	.byte	$e9,$e7,$e5,$e3,$e1,$df,$dd,$db
	.byte	$d9,$d6,$d4,$d2,$cf,$cd,$ca,$c8
	.byte	$c5,$c3,$c0,$bd,$bb,$b8,$b5,$b2
	.byte	$af,$ac,$a9,$a6,$a3,$a0,$9d,$9a
	.byte	$97,$94,$91,$8e,$8b,$88,$85,$82
	.byte	$7f,$7c,$79,$76,$73,$70,$6d,$6a
	.byte	$67,$64,$60,$5d,$5b,$58,$55,$52
	.byte	$4f,$4c,$49,$46,$44,$41,$3e,$3b
	.byte	$39,$36,$34,$31,$2f,$2d,$2a,$28
	.byte	$26,$24,$21,$1f,$1d,$1c,$1a,$18
	.byte	$16,$14,$13,$11,$10,$0e,$0d,$0c
	.byte	$0b,$09,$08,$07,$07,$06,$05,$04
	.byte	$04,$03,$03,$02,$02,$02,$02,$02
	.byte	$02,$02,$02,$02,$02,$02,$03,$03
	.byte	$04,$04,$05,$06,$07,$07,$08,$0a
	.byte	$0b,$0c,$0d,$0e,$10,$11,$13,$15
	.byte	$16,$18,$1a,$1c,$1e,$20,$22,$24
	.byte	$26,$28,$2a,$2d,$2f,$31,$34,$36
	.byte	$39,$3c,$3e,$41,$44,$46,$49,$4c
	.byte	$4f,$52,$55,$58,$5b,$5e,$61,$64
	.byte	$67,$6a,$6d,$70,$73,$76,$79,$7c
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
SPRITE_TILE:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	00h,04h,08h,0ch,40h,44h,48h,4ch,80h
	.byte	00h,04h,08h,0ch,40h,44h,48h,4ch,80h
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;


;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
SPRITE_XPOS:
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
	.byte	$00,$00,$20,$00,$40,$00,$60,$00
	.byte	$80,$00,$a0,$00,$c0,$00,$e0,$00
	.byte	$00,$01
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
